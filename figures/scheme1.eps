%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 56 355 371 427 
%%LanguageLevel: 3
%%Creator: CorelDRAW 2021.5
%%Title: scheme1.eps
%%CreationDate: Sat Nov 13 22:17:39 2021
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW 2021.5 Version 23.5.0.506
/EpsFile true def
%%BeginResource: procset wCorel23Dict 23.0 0
/wCorel23Dict 300 dict def wCorel23Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel23Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 51 /three putdup 50 /two putdup 43 /plus putdup 79 /O putdup 67 /C putdup 72 /H putdup 49 /one putdup 41 /parenright putdup 78 /N putdup 97 /a putdup 84 /T putdup 77 /M putdup 80 /P putdup 48 /zero putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexecA22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA4FD547AC1857372BEE88BEF04F350ADEC21D72A17F822B7DA7449147F456503359226AC946E4D24A3A1
0C13836A90EFA3360B6E5E0327CCB88F03E65DCE7F0D21C41C6E62D1E2931F3F50F30362B55306191AC5FCBED5E735401275CDCAB104B1CC94BCE3C9B4F19F6C
BD11C635632FFE8F8CF77F36F9BC9CB1681C3E6454827856BADEBDA4718A43904BFC6607B19EEFC3C397ADF75DAD8522226E64576D1D5F2539E878BE8FBE6DDD
2A21EA8CFDCC87D80055DCA59E04C5A0F5209B44943E3BB8A176BB807A8C624CA2A8A7FDC3D49F3736AF2819CA5635FF8F7A97AF2DF31176EEA5A7BB734E26C2
D58B7BEBA6859948CF58D2ACE4275EFF66AEC99029B158610E4F1618C6BA17511616DAA11302E60ABC9FB09FC3D73136823F79A04E89570F3106F1685FEAB7C9
BD39F37976B72D94D0C50C6F5CEA063D6FFB7248482A700EEB5326517191AB76BAE85C804DC450A496B830D31B2C8814ABA0DB3723C121F005E3B61FDAA9A2F7
231BC27FEA8304365F29284C91BB6F4FE743F60DFE2D2D228F83874EF2803556BC21A9F8A9089A054A847513DA14511014884AE797C959D287E212D2E33822F8
413E441812DA15E20D02F430E62B4D254B9E19531C7D67E1FBF2B617D7F6D1005770B19748A68E5803FE534C0C8BAC50293C650253A72E771FFB7EE2CB1197B3
DCFD22087ECACAB6EDA1572F6BAD002D17DFC822FA7D8A4C58D4D9AC9BE806EE1A53F95E433E890FDC53C63DC2E228840FFE4DC89673C44BC717BD1301F130E4
8035A03CB370670F888AA9BD437EE95927EDE64121F6951C2096D63AF1890452B7299842953C9C50C106CDBD8B92B0DB217FC24A282339684659CFCDA7AB29A9
513521798D241081C1909961711F840D0BB75DA2A7120D066EF41AFFBF829CCC9B9DFFEFE966781D8D43444A952D4CC2FCCE1017638442AA0D8D353CB0814BB0
BE61E0F0E8D5C9B93C9902C0819DE11F8C7A90CE117A32CC04CC34DB8D4990F326A71EC541CD619BC5EFB58D48D8FFA72F69FE98F7427737A44AC45BECF5233C
9E42F7D978A3FBF6F110D575A23A5217656FB128CC9ADA6C2AB906195F1276DC9288B4035FD5397A1A83EFE9FA79095CAE2C0D5B03A0D510993BF5F830A26DD1
9C596466DA8525841D6C0930D3CB260CB0C7F5A5A038E925BA3A7DB34F47F5F82771CBCB09488A0B6A554B5CB2A79A87BD742551B70847425F81664ED6E52943
8141E85F36D2FB857AECA4DA3910EB09F5519AD9CCCF6A6F8D041BE6757E7B39D06B0963787E6378CFB2C922233B19B1C47526509462623EAAD5D3B7972BE5A0
E4829593B01E84CE56F51EFB344D20BCFC547F3E45A2B2052D358747FCF503BAD3074682283FEB0B339C0CD82EFFE1460F9A2DA8ED6FBB88DB6E6DD0C907FA9A
A9245B3BF4F0C8327EB3DFEB4B05B1303110B532FD7FEA4DE5F4E0F3F9989DF94D27600D0D2ABB280B12B9C5E58C41911D96EA66C733D13DBDE3669DA7EF7BC5
6573D12C095C43FAA830227720D61464A03086ADDF7C1826DE0CEE962FCF9F02EB360F4B3D8D1481A578DA3CC17692C141DBDE58B44BC0CB142FD94FEE0A0BAA
62E2CFA77D7F2D3D14E57A4B7F485E0D4F7CC68C3857F63BDF555F0E7B3CE4C5B4DE2808A566EB883B28BC754B774BDAF84ABBB98D3DC33F2A17689D88548651
0164EDFD682EEAB00E91085C8339110A14F7240CD5999CC7F8C230A0538EBC59EAC7B5E1C798E44285E12A50213F5E116EA9FC20E85942DB162E4510CB20632E
BF033E3CFE69EF989A7F80BC4AE032572B3AC15387AAE1149AFC690376D58FA67E29892C88CDFFF1D9046BBE0F4B057CD7047392EEF55C67E1C0FCE5FABDCB2A
B344FF3035D6877872BDCED0EC1385B9F31E0EE992E3F59F27C474B499D7297F6D0B04E81EE52631B97D1E73D13715CB9871FC68850CC4713C25234AD8370F35
066A2007A0333F0C5CAEA7945F7B1343625F067C9BAFF9128D739904267BEE296A34C69A4A2E63658DB82D41EDA08C54631F20E2526FB13A0FAEB256DB83BDA3
0BB421E83A8B2918FCF31369E285D7FFF9FEF0C4CB5A4188C910F000A4A7C997B124D533CE5566506E9491B8232ABF19E338BC57205F86C50D1DE7B513E65673
D6A05EDD2F3F7D8EED359FE38B270E0D5ADA9E50DFC48E9DC00EA02F0D9E25065425583E17CFC42873E86579D1F9B5EB1A67729E56B049A3A1958D9CC71DD498
08059701E124BDCD1F4652B5E7E4CB05A3FC04A5B197FA04D2FE6D3F6F1B8DAA4AD07B84398F52C8127B3DC1BCC546E951985E868A8AB7CEED47CDAEC4A66273
AC296294B855444F2F39070B41A32B447463F889292957F7BDCD366075EC039A4A0849E798163E9E9215DC44385ACC2D177E25669DEA80EF7069DFD112C9D918
C87816D320C31CCAC0F6F826CF14435C454444B604789435F08EF2A8C20326D267ACC61EA08CBFD4F8B18416E699AB72B7A4CDBDE6B4C0490EFEB8A278D49717
F2FD2C3C259A493DCDAD23225B13E89DBAAEE9CA20DE833F397A130A33BD1E7AB13DE29809BF9CF1882706E11B2A835A827A4C452AC7C6AEB7CE57285C60DEDA
02C3D048F35224759ADCD5CE24BFEA14DA848FEF9970408D68D8E860A3F488769B2A87B278F0A9F1A28A56BBBEB985C9BA7E30091FB98AE20F188D3AE7A04466
4608E9F491FA4FE1F9DAC8584AAB3715A111F315934796FB718CDD88F8E65469BDDF3502E048F530777395C5D9E431FCF35E328A4222D98C83E2E528605489BA
8BACE1F4F43757FDE9349994B4F401D9430543D9C21A2B62ECC6F44A2C07BA46E12DF25A5AF8CB38307D4BD3BE4532C468075BA8223D7A10E7A4D6A97258B8E3
65C77241F4DDBAAC6EF14EB9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 0 556 
0 222 556 333 1000 556 556 333 1000 667 333 1000 0 611 0 0 
222 222 333 333 350 556 1000 333 1000 500 333 944 0 500 667 278 
333 556 556 556 556 260 556 333 737 370 556 584 0 737 552 400 
549 333 333 333 576 537 333 333 333 365 556 834 834 834 611 667 
667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 
556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]
CorelDrawReencodeVect /_R1026458-ArialMT /ArialMT Z

%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /UNI2029 putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B18D54F9E0F0F9280A6425EED2E2B7BB29DA8D3D977AE0F4D887F72309ABE6CB09B8D1F560053EF45B132D9
94234037516D77B55487FDC01EF1886D5E76B3FEA52550B042A29449DF2E11DC3397A75D6380F00B384338F55423CD087C6BBA8E698119FAD8689298FB6C0B33
BF675565E8A54ECFEE7A22D224C31A5AEA5779E3B8580F9BB18999AEADA6E5AABE275DE256946EE2C1C7EA3E5BE5CB77CFFE74DC051078D294E3DF34446740
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
/CorelDrawReencodeVect-ArialMT [16#21/UNI2029 ] def
[ 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
0 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 0 556 
0 222 556 333 1000 556 556 333 1000 667 333 1000 0 611 0 0 
222 222 333 333 350 556 1000 333 1000 500 333 944 0 500 667 278 
333 556 556 556 556 260 556 333 737 370 556 584 0 737 552 400 
549 333 333 333 576 537 333 333 333 365 556 834 834 834 611 667 
667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 
722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 
556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 
556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]
CorelDrawReencodeVect-ArialMT /_R1026458-ArialMT-1 /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
56.56762 355.29250 370.50746 426.23235 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
56.56762 426.23235 m
370.50746 426.23235 L
370.50746 355.29250 L
56.56762 355.29250 L
56.56762 426.23235 L
@c
F

@rax %Note: Object
71.60060 385.31735 86.51764 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
86.51764 394.57531 m
86.51764 393.70932 L
71.97449 385.31735 L
71.60060 385.96734 L
86.51764 394.57531 L
@c
F

@rax 97.83156 381.90331 104.67666 389.30995 @E
[0.00028346 0.00000000 0.00000000 0.00028346 97.34832756 382.02480945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (O) @t
T
@rax %Note: Object
86.51764 388.11146 96.58658 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
96.58658 388.76145 m
96.21156 388.11146 L
86.51764 393.70932 L
86.51764 394.57531 L
96.58658 388.76145 L
@c
F

@rax %Note: Object
105.84850 388.08850 115.95742 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
115.95742 394.57531 m
115.95742 393.70932 L
106.22353 388.08850 L
105.84850 388.73849 L
115.95742 394.57531 L
@c
F

@rax 127.56501 379.83231 145.34022 389.30712 @E
[0.00028346 0.00000000 0.00000000 0.00028346 127.06672756 382.02730945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (CH) @t
T
@rax 127.56501 379.83231 145.34022 389.30712 @E
[0.00028346 0.00000000 0.00000000 0.00028346 127.06672756 382.02730945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 26458.00000 z
50954 -7408 (3) @t
T
@rax %Note: Object
115.95742 388.00630 126.20948 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
126.20948 388.65543 m
125.83446 388.00630 L
115.95742 393.70932 L
115.95742 394.57531 L
126.20948 388.65543 L
@c
F

@rax 112.55159 407.40321 119.39669 414.80986 @E
[0.00028346 0.00000000 0.00000000 0.00028346 112.06832756 407.52480945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (O) @t
T
@rax %Note: Object
114.05254 393.25946 114.80258 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
114.05254 405.33534 m
114.80258 405.33534 L
114.80258 393.25946 L
114.05254 393.25946 L
114.05254 405.33534 L
@c
F

@rax %Note: Object
117.11254 393.25946 117.86258 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
117.11254 405.33534 m
117.86258 405.33534 L
117.86258 393.25946 L
117.11254 393.25946 L
117.11254 405.33534 L
@c
F

@rax %Note: Object
159.80740 396.34753 245.19061 397.09729 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
159.80740 397.09729 m
245.19061 397.09729 L
245.19061 396.34753 L
159.80740 396.34753 L
159.80740 397.09729 L
@c
F

@rax %Note: Object
243.03260 392.45046 259.90753 401.04539 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
259.90753 396.72255 m
243.03260 392.45046 L
243.03260 392.45046 245.13959 394.85339 245.13959 396.72255 C
245.13959 398.61354 243.03260 401.04539 243.03260 401.04539 C
259.90753 396.72255 L
@c
F

@rax %Note: Object
265.18054 385.31735 280.09757 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
280.09757 394.57531 m
280.09757 393.70932 L
265.55443 385.31735 L
265.18054 385.96734 L
280.09757 394.57531 L
@c
F

@rax 291.41150 381.90331 298.25660 389.30995 @E
[0.00028346 0.00000000 0.00000000 0.00028346 290.92832756 382.02480945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (O) @t
T
@rax %Note: Object
280.09757 388.11146 290.16652 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
290.16652 388.76145 m
289.79150 388.11146 L
280.09757 393.70932 L
280.09757 394.57531 L
290.16652 388.76145 L
@c
F

@rax %Note: Object
299.42844 388.08850 309.53764 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
309.53764 394.57531 m
309.53764 393.70932 L
299.80346 388.08850 L
299.42844 388.73849 L
309.53764 394.57531 L
@c
F

@rax %Note: Object
309.53764 385.20935 324.25767 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
324.25767 386.07534 m
324.25767 385.20935 L
309.53764 393.70932 L
309.53764 394.57531 L
324.25767 386.07534 L
@c
F

@rax 306.13153 407.40321 312.97663 414.80986 @E
[0.00028346 0.00000000 0.00000000 0.00028346 305.64832756 407.52480945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (O) @t
T
@rax %Note: Object
307.63247 393.25946 308.38252 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
307.63247 405.33534 m
308.38252 405.33534 L
308.38252 393.25946 L
307.63247 393.25946 L
307.63247 405.33534 L
@c
F

@rax %Note: Object
310.69247 393.25946 311.44252 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
310.69247 405.33534 m
311.44252 405.33534 L
311.44252 393.25946 L
310.69247 393.25946 L
310.69247 405.33534 L
@c
F

@rax %Note: Object
324.25767 385.20935 338.98762 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
338.98762 394.57531 m
338.98762 393.70932 L
324.25767 385.20935 L
324.25767 386.07534 L
338.98762 394.57531 L
@c
F

@rax 350.59493 379.83231 368.37014 389.30712 @E
[0.00028346 0.00000000 0.00000000 0.00028346 350.09672756 382.02730945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (CH) @t
T
@rax 350.59493 379.83231 368.37014 389.30712 @E
[0.00028346 0.00000000 0.00000000 0.00028346 350.09672756 382.02730945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 26458.00000 z
50954 -7408 (3) @t
T
@rax %Note: Object
338.98762 388.00630 349.23940 394.57531 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
349.23940 388.65543 m
348.86466 388.00630 L
338.98762 393.70932 L
338.98762 394.57531 L
349.23940 388.65543 L
@c
F

@rax 335.58151 407.40321 342.42661 414.80986 @E
[0.00028346 0.00000000 0.00000000 0.00028346 335.09832756 407.52480945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (O) @t
T
@rax %Note: Object
337.08246 393.26031 337.83250 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
337.08246 405.33534 m
337.83250 405.33534 L
337.83250 393.26031 L
337.08246 393.26031 L
337.08246 405.33534 L
@c
F

@rax %Note: Object
340.14246 393.25946 340.89250 405.33534 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
340.14246 405.33534 m
340.89250 405.33534 L
340.89250 393.25946 L
340.14246 393.25946 L
340.14246 405.33534 L
@c
F

@rax 165.86674 403.01263 234.52753 424.04258 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 416.75740945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (1\051) @t
/_R1026458-ArialMT-1 35278.00000 z
31368 0 (\041) @t
/_R1026458-ArialMT 35278.00000 z
41169 0 (NaOCH) @t
179375 0 (CH) @t
T
@rax 165.86674 403.01263 234.52753 424.04258 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 416.75740945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 26458.00000 z
164660 -7408 (2) @t
230329 -7408 (3) @t
50997 -48154 (3) @t
116666 -48154 (2) @t
T
@rax 165.86674 403.01263 234.52753 424.04258 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 416.75740945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
-138 -40570 (CH) @t
65531 -40570 (CH) @t
131200 -40570 (OH) @t
T
@rax 58.63011 379.92614 200.21131 400.00932 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 382.12100945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (2\051) @t
/_R1026458-ArialMT-1 35278.00000 z
31368 0 (\041) @t
/_R1026458-ArialMT 35278.00000 z
41169 0 (H) @t
81361 0 (O) @t
T
@rax 58.63011 379.92614 200.21131 400.00932 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 382.12100945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 26458.00000 z
66646 -7408 (3) @t
108801 12700 (+) @t
T
@rax 58.63011 379.92614 200.21131 400.00932 @E
[0.00028346 0.00000000 0.00000000 0.00028346 165.40752756 382.12100945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
-377754 37747 (2) @t
T
@rax 88.46249 357.48567 338.58822 364.79565 @E
[0.00028346 0.00000000 0.00000000 0.00028346 88.22752756 357.60740945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
0 0 (TMP001) @t
T
@rax 88.46249 357.48567 338.58822 364.79565 @E
[0.00028346 0.00000000 0.00000000 0.00028346 88.22752756 357.60740945] @tm
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
e
/_R1026458-ArialMT 35278.00000 z
751749 0 (TMP002) @t
T
 @gs spg @gr
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel23Dict 23.0 0
%%+ font ArialMT
%%EOF
